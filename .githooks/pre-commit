#!/bin/bash

# --- Start of pre-commit hook script ---

echo "Running pre-commit checks..."

# Check if there are any staged changes at all
if git diff --cached --quiet; then
  echo "No staged changes to commit. Aborting pre-commit hook."
  exit 1
fi

# --- Check for "TODO" in staged .java files ---

# Get a list of all staged .java files
# 'git diff --cached --name-only' lists staged files
# 'grep '\.java$'' filters for files ending with .java
STAGED_JAVA_FILES=$(git diff --cached --name-only | grep '\.java$')

# Flag to track if any TODOs are found
TODO_FOUND=false

# Loop through each staged .java file
for file in $STAGED_JAVA_FILES; do
  # Check if the file contains "TODO" (case-sensitive as per convention)
  # 'git cat-file -p :0:$file' gets the content of the staged file
  # 'grep -q "TODO"' searches for "TODO" quietly (without printing matched lines)
  if git cat-file -p :0:"$file" | grep -q "TODO"; then
    echo "ERROR: Found 'TODO' in staged Java file: $file"
    TODO_FOUND=true
  fi
done

# If any TODOs were found, abort the commit
if [ "$TODO_FOUND" = true ]; then
  echo "Pre-commit check failed: Please resolve or remove 'TODO' comments before committing."
  exit 1 # Abort the commit
fi

# --- End of pre-commit hook script ---

echo "Pre-commit checks passed successfully."
exit 0 # Allow the commit to proceed
